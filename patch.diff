diff --git a/./decomp.cs b/./decompFixed.cs
index aa19cd0..d107a98 100644
--- a/./decomp.cs
+++ b/./decompFixed.cs
@@ -21,22 +21,6 @@ using Ionic.Zlib;
 using SDL2;
 using Steamworks;
 
-[assembly: AssemblyTrademark ("")]
-[assembly: AssemblyProduct ("")]
-[assembly: AssemblyTitle ("")]
-[assembly: AssemblyFileVersion ("1.0.0.0")]
-[assembly: CompilationRelaxations (8)]
-[assembly: AssemblyCopyright ("Copyright ©  2016")]
-[assembly: AssemblyCompany ("")]
-[assembly: AssemblyConfiguration ("")]
-[assembly: ComVisible (false)]
-[assembly: TargetFramework (".NETFramework,Version=v4.5.1", FrameworkDisplayName = ".NET Framework 4.5.1")]
-[assembly: SuppressIldasm]
-[assembly: Guid ("f456b7fc-0fea-4096-b513-7f484f69bf99")]
-[assembly: RuntimeCompatibility (WrapNonExceptionThrows = true)]
-[assembly: AssemblyDescription ("")]
-[assembly: PermissionSet (SecurityAction.RequestMinimum, XML = "<PermissionSet class=\"System.Security.PermissionSet\"\r\nversion=\"1\">\r\n<IPermission class=\"System.Security.Permissions.SecurityPermission, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"\r\nversion=\"1\"\r\nFlags=\"SkipVerification\"/>\r\n</PermissionSet>\r\n")]
-[assembly: AssemblyVersion ("1.0.0.0")]
 [module: UnverifiableCode]
 public static class class_0
 {
@@ -1040,7 +1024,7 @@ public sealed class class_15 : class_195
 				parameter_127.method_2093 ();
 			}
 			class_9.field_46.field_1965.method_395 (1f);
-			return (Maybe<class_195>)(class_195)new NormalInputMode ();
+			return Maybe<class_195>.Of(new NormalInputMode ());
 		}
 		return class_438.field_1954;
 	}
@@ -1493,7 +1477,6 @@ public static class class_18
 		return class_438.field_1954;
 	}
 
-	[IteratorStateMachine (typeof(class_19))]
 	public static IEnumerable<T> method_69<T> (this IEnumerable<Maybe<T>> parameter_135)
 	{
 		return new class_19<T> (-2) {
@@ -1501,7 +1484,6 @@ public static class class_18
 		};
 	}
 
-	[IteratorStateMachine (typeof(class_20))]
 	public static IEnumerable<R> method_70<T, R> (this IEnumerable<T> parameter_136, Func<T, Maybe<R>> parameter_137)
 	{
 		return new class_20<T, R> (-2) {
@@ -5919,7 +5901,7 @@ public sealed class class_102 : class_7
 		}
 	}
 
-	public void method_22 (uint parameter_210, uint parameter_211, out IntPtr parameter_212, out IntPtr parameter_213, out IntPtr parameter_214)
+	public unsafe void method_22 (uint parameter_210, uint parameter_211, out IntPtr parameter_212, out IntPtr parameter_213, out IntPtr parameter_214)
 	{
 		method_105 (null, parameter_210, null, parameter_211, true, out parameter_212, out parameter_213, out parameter_214);
 	}
@@ -6179,7 +6161,7 @@ public sealed class class_106 : class_195
 			parameter_267.field_3729.method_669 (item3);
 		}
 		if (class_418.method_625 ((class_204)1)) {
-			return (Maybe<class_195>)(class_195)new NormalInputMode ();
+			return Maybe<class_195>.Of(new NormalInputMode());
 		}
 		return class_438.field_1954;
 	}
@@ -8566,7 +8548,7 @@ public static class class_142
 
 	public static class_143 method_248 (class_480 parameter_556, Index2 parameter_557, Matrix4 parameter_558, Matrix4 parameter_559)
 	{
-		class_411.method_540 (method_245 ().Count < 100, "There are too many render targets in the render target stack!");
+		class_411.method_540 (method_245 ().Count() < 100, "There are too many render targets in the render target stack!");
 		class_134.method_205 ();
 		parameter_556.method_680 (parameter_557);
 		Renderer.method_1310 (parameter_558, parameter_559);
@@ -8576,10 +8558,10 @@ public static class class_142
 
 	private static void method_126 ()
 	{
-		class_411.method_540 (method_245 ().Count > 0, "There are no more render targets left to pop!");
+		class_411.method_540 (method_245 ().Count() > 0, "There are no more render targets left to pop!");
 		class_134.method_205 ();
 		method_245 ().Pop ();
-		if (method_245 ().Count > 0) {
+		if (method_245 ().Count() > 0) {
 			class_183 class_183 = method_245 ().Peek ();
 			class_183.field_1210.method_680 (class_183.field_1211);
 			Matrix4 field_1212 = class_183.field_1212;
@@ -8610,7 +8592,7 @@ internal sealed class class_144 : class_195
 			parameter_563.CurrentSolution ().method_1925 (field_1137, method_252 (parameter_563));
 			parameter_563.method_2093 ();
 			class_9.field_46.field_1995.method_395 (1f);
-			return (Maybe<class_195>)(class_195)new NormalInputMode ();
+			return Maybe<class_195>.Of(new NormalInputMode());
 		}
 		return class_438.field_1954;
 	}
@@ -9423,7 +9405,7 @@ public enum class_158
 {
 
 }
-internal sealed class Stack<T>
+public class Stack<T>
 {
 	public readonly List<T> Items = new List<T> ();
 
@@ -9513,7 +9495,7 @@ public sealed class class_162 : class_195
 		if (!class_418.method_623 ((class_204)1)) {
 			parameter_611.field_3730.method_340 ();
 			parameter_611.field_3730.method_338 (field_1173);
-			return (Maybe<class_195>)(class_195)new NormalInputMode ();
+			return Maybe<class_195>.Of(new NormalInputMode());
 		}
 		if (Vector2.Distance (class_418.method_620 (), field_1172) >= Editor.field_2378 && !field_1173.field_1689.method_1153 ()) {
 			class_9.field_46.field_1994.method_395 (1f);
@@ -10454,9 +10436,8 @@ public struct class_187 : IEquatable<class_187>
 	public override string ToString ()
 	{
 		//IL_0019: Unknown result type (might be due to invalid IL or missing references)
-		CSteamID val = default(CSteamID);
-		((CSteamID)(ref val))..ctor (field_1216);
-		return "SteamID:" + ((CSteamID)(ref val)).GetAccountID ();
+		CSteamID val = new CSteamID(field_1216);
+		return "SteamID:" + ((CSteamID)(val)).GetAccountID ();
 	}
 
 	public static implicit operator class_187 (CSteamID p1498646661)
@@ -10820,7 +10801,7 @@ internal sealed class class_197 : class_195
 			parameter_865.field_3730.method_338 (item2);
 		}
 		if (class_418.method_625 ((class_204)1)) {
-			return (Maybe<class_195>)(class_195)new NormalInputMode ();
+			return Maybe<class_195>.Of(new NormalInputMode());
 		}
 		return class_438.field_1954;
 	}
@@ -15518,7 +15499,7 @@ public sealed class class_371 : class_195
 		if (!class_418.method_623 ((class_204)1)) {
 			parameter_2178.field_3729.method_668 ();
 			parameter_2178.field_3729.method_669 (field_1784);
-			return (Maybe<class_195>)(class_195)new NormalInputMode ();
+			return Maybe<class_195>.Of(new NormalInputMode());
 		}
 		if (Vector2.Distance (class_418.method_620 (), field_1783) >= Editor.field_2378) {
 			class_9.field_46.field_1998.method_395 (1f);
@@ -16650,7 +16631,7 @@ public sealed class class_399 : class_195
 			} else {
 				class_9.field_46.field_1995.method_395 (1f);
 			}
-			return (Maybe<class_195>)(class_195)new NormalInputMode ();
+			return Maybe<class_195>.Of(new NormalInputMode());
 		}
 		return class_438.field_1954;
 	}
@@ -17659,7 +17640,6 @@ public static class class_411
 		return list;
 	}
 
-	[IteratorStateMachine (typeof(class_412))]
 	public static IEnumerable<T> method_565<T> (class_107 parameter_2345, IEnumerable<T> parameter_2346, IEnumerable<T> parameter_2347)
 	{
 		return new class_412<T> (-2) {
@@ -18218,7 +18198,7 @@ public static class class_418
 
 	public static class_419 method_626 (Vector2 parameter_2411)
 	{
-		class_411.method_540 (field_1900.Count < 100, "There are too many input contexts in the input context stack!");
+		class_411.method_540 (field_1900.Count() < 100, "There are too many input contexts in the input context stack!");
 		field_1900.Push (field_1899);
 		field_1899 -= parameter_2411;
 		return new class_419 ();
@@ -18226,7 +18206,7 @@ public static class class_418
 
 	private static void method_627 ()
 	{
-		class_411.method_540 (field_1900.Count > 0, "There are no more input contexts left to pop!");
+		class_411.method_540 (field_1900.Count() > 0, "There are no more input contexts left to pop!");
 		field_1899 = field_1900.Pop ();
 	}
 }
@@ -18814,7 +18794,6 @@ public static class Localization
 
 	public static string method_636 (string parameter_2431, Language parameter_2432)
 	{
-		parameter_2431 = parameter_2431.Replace ("", "");
 		parameter_2431 = parameter_2431.Replace ("--", "—");
 		parameter_2431 = parameter_2431.Replace ("……", "…");
 		if (parameter_2432 == Language.Chinese) {
@@ -19117,7 +19096,7 @@ public sealed class class_427 : class_195
 		}
 		if (!class_418.method_623 ((class_204)1)) {
 			class_9.field_46.field_1965.method_395 (1f);
-			return (Maybe<class_195>)(class_195)new NormalInputMode ();
+			return Maybe<class_195>.Of(new NormalInputMode());
 		}
 		return class_438.field_1954;
 	}
@@ -20252,7 +20231,7 @@ public static class class_448
 
 	public static readonly bool field_2041 = true;
 
-	public static readonly bool field_2042 = true;
+	public static readonly bool field_2042 = false;
 
 	public static readonly bool field_2043 = true;
 
@@ -21782,6 +21761,7 @@ public static class PartTypes
 	public static PartType Track;
 
 	public static PartType VanBerloWheel;
+	public static PartType RavariWheel;
 
 	public static PartType Bonding;
 
@@ -21992,6 +21972,45 @@ public static class PartTypes
 			Instructable = true,
 			Flags = PuzzleFlags.BaronWheel
 		};
+		RavariWheel = new PartType {
+			Id = "ravari",
+			Name = Localization.Translate("Ravari's Wheel", string.Empty),
+			Description = Localization.Translate("By using Ravari's wheel with the glyph of degradation, any metal can be reduced to a lower metal.", string.Empty),
+			ToolbarIcon = class_9.field_44.field_130.field_505.field_583,
+			ToolbarHoverIcon = class_9.field_44.field_130.field_505.field_584,
+			Cost = 30,
+			Unique = true,
+			field_1052 = (class_170)1,
+			HasArms = true,
+			FixedAtoms = new Dictionary<HexIndex, AtomType> {
+				{
+					new HexIndex (-1, 0),
+					AtomTypes.Lead
+				},
+				{
+					new HexIndex (1, 0),
+					AtomTypes.Copper
+				},
+				{
+					new HexIndex (-1, 1),
+					AtomTypes.Tin
+				},
+				{
+					new HexIndex (0, 1),
+					AtomTypes.Iron
+				},
+				{
+					new HexIndex (0, -1),
+					AtomTypes.Gold
+				},
+				{
+					new HexIndex (1, -1),
+					AtomTypes.Silver
+				}
+			},
+			Instructable = true,
+			Flags = PuzzleFlags.BaronWheel
+		};
 		PartType = new PartType ();
 		PartType.Id = "bonder";
 		PartType.Name = Localization.Translate ("Glyph of Bonding", string.Empty);
@@ -22232,7 +22251,7 @@ public static class PartTypes
 		};
 		PartType.Flags = PuzzleFlags.Quintessence;
 		Dispersial = PartType;
-		Types = new PartType[25] {
+		Types = new PartType[26] {
 			Reagent,
 			Product,
 			ProductPolymer,
@@ -22245,6 +22264,7 @@ public static class PartTypes
 			Gripper,
 			Track,
 			VanBerloWheel,
+			RavariWheel,
 			Bonding,
 			Unbonding,
 			Multibonding,
@@ -22314,7 +22334,7 @@ internal sealed class class_481 : class_195
 		field_2206.method_325 ((class_158)0, field_2207, -class_418.method_621 ());
 		class_160.field_1163 = class_9.field_49.field_1800;
 		if (class_418.method_625 ((class_204)3)) {
-			return (Maybe<class_195>)(class_195)new NormalInputMode ();
+			return Maybe<class_195>.Of(new NormalInputMode ());
 		}
 		return class_438.field_1954;
 	}
@@ -22898,7 +22918,7 @@ public sealed class CampaignItem
 		case (class_147)3: {
 			int num = 0;
 			if (class_448.field_2042) {
-				SteamUserStats.GetStat ("SOLITAIRE", ref num);
+				SteamUserStats.GetStat ("SOLITAIRE", out num);
 			}
 			return num > 0;
 		}
@@ -25738,7 +25758,8 @@ public sealed class GameLogic
 		Files = new Files ();
 		WorkshopManager = new WorkshopManager ();
 		ScoreManager.InitScores ();
-		WorkshopManager.InitWorkshop ();
+		// No Steam support
+		//WorkshopManager.InitWorkshop ();
 		Solutions = SolutionManager.GetSolutions ();
 		method_931 (new class_122 ());
 		method_922 (class_110.method_123 ());
@@ -25872,7 +25893,7 @@ public sealed class GameLogic
 			}
 			stack.Push (screen);
 		}
-		while (stack.Count > 0) {
+		while (stack.Count() > 0) {
 			Screens.Push (stack.Pop ());
 		}
 	}
@@ -26053,7 +26074,7 @@ public sealed class GameLogic
 				if (field_2389.TryGetValue (_event.field_3285.field_3490, out var value4) && value4.method_704 ()) {
 					string text = null;
 					byte[] array = new byte[32];
-					Marshal.Copy ((IntPtr)(&_event.field_3285.pm1378608784.field_3491), array, 0, array.Length);
+					Marshal.Copy ((IntPtr)(&_event.field_3285.pm1378608784), array, 0, array.Length);
 					text = Encoding.UTF8.GetString (array);
 					value4.field_2086 = text [0];
 				}
@@ -27545,7 +27566,7 @@ public sealed class JournalScreen : IScreen
 		bool flag3 = true;
 		if (flag && class_448.field_2042) {
 			int num2 = default(int);
-			SteamUserStats.GetStat ("SOLITAIRE", ref num2);
+			SteamUserStats.GetStat ("SOLITAIRE", out num2);
 			if (num2 == 0) {
 				flag3 = false;
 			}
@@ -28230,9 +28251,9 @@ public struct Maybe<T> : IEquatable<Maybe<T>>
 
 	private T Item;
 
-	public Maybe (bool Present, T ItemIn)
+	public Maybe (bool PresentIn, T ItemIn)
 	{
-		SetPresent (Present);
+		Present = PresentIn;
 		Item = ItemIn;
 	}
 
@@ -30854,7 +30875,7 @@ public sealed class PartInputDraggingMode : class_195
 			} else {
 				class_9.field_46.field_1999.method_395 (1f);
 			}
-			return (Maybe<class_195>)(class_195)new NormalInputMode ();
+			return Maybe<class_195>.Of(new NormalInputMode ());
 		}
 		return class_438.field_1954;
 	}
@@ -31612,7 +31633,8 @@ public sealed class Puzzle
 		try {
 			binaryWriter.Write (field_2694);
 			binaryWriter.Write (field_2692);
-			binaryWriter.Write (SteamUser.GetSteamID ().m_SteamID);
+			// No Steam support
+			binaryWriter.Write (/*SteamUser.GetSteamID ().m_SteamID*/ (ulong)(0));
 			binaryWriter.Write ((ulong)Flags);
 			binaryWriter.Write (Inputs.Length);
 			for (int i = 0; i < Inputs.Length; i++) {
@@ -38438,18 +38460,18 @@ public sealed class ScoreManager
 		if (GameLogic.Instance.field_2405.field_2221.method_683 () || parameter_3576.field_2710) {
 			return;
 		}
-		p788092568.field_2947 = method_1347 (parameter_3576, parameter_3577);
+		/*p788092568.field_2947 = method_1347 (parameter_3576, parameter_3577);
 		if (field_2936.ContainsKey (p788092568.field_2947)) {
 			SteamUserStats.UploadLeaderboardScore (new SteamLeaderboard_t (field_2936 [p788092568.field_2947].field_1006), (ELeaderboardUploadScoreMethod)1, parameter_3578, (int[])null, 0).method_2137<LeaderboardScoreUploaded_t> (delegate {
 				p788092568.field_2948.method_1351 (p788092568.field_2947);
 			});
-		}
+		}*/
 	}
 
 	private void method_1351 (string parameter_3579)
 	{
-		//IL_0003: Unknown result type (might be due to invalid IL or missing references)
-		SteamUserStats.FindOrCreateLeaderboard (parameter_3579, (ELeaderboardSortMethod)1, (ELeaderboardDisplayType)1).method_2137<LeaderboardFindResult_t> (delegate(LeaderboardFindResult_t parameter_3580, bool parameter_3581) {
+		// No Steam support
+		/*SteamUserStats.FindOrCreateLeaderboard (parameter_3579, (ELeaderboardSortMethod)1, (ELeaderboardDisplayType)1).method_2137<LeaderboardFindResult_t> (delegate(LeaderboardFindResult_t parameter_3580, bool parameter_3581) {
 			//IL_0000: Unknown result type (might be due to invalid IL or missing references)
 			//IL_0011: Unknown result type (might be due to invalid IL or missing references)
 			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
@@ -38478,7 +38500,7 @@ public sealed class ScoreManager
 					//IL_0030: Unknown result type (might be due to invalid IL or missing references)
 					if (!parameter_3583 && parameter_3582.m_cEntryCount == 1) {
 						LeaderboardEntry_t val2 = default(LeaderboardEntry_t);
-						SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3582.m_hSteamLeaderboardEntries, 0, ref val2, (int[])null, 0);
+						SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3582.m_hSteamLeaderboardEntries, 0, out val2, (int[])null, 0);
 						string leaderboardName3 = SteamUserStats.GetLeaderboardName (parameter_3582.m_hSteamLeaderboard);
 						field_2937 [leaderboardName3] = val2.m_nScore;
 					}
@@ -38499,7 +38521,7 @@ public sealed class ScoreManager
 						List<LeaderboardEntry> list = new List<LeaderboardEntry> ();
 						LeaderboardEntry_t val = default(LeaderboardEntry_t);
 						for (int i = 0; i < parameter_3584.m_cEntryCount; i++) {
-							SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3584.m_hSteamLeaderboardEntries, i, ref val, (int[])null, 0);
+							SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3584.m_hSteamLeaderboardEntries, i, out val, (int[])null, 0);
 							list.Add (new LeaderboardEntry (SteamFriends.GetFriendPersonaName (val.m_steamIDUser), val.m_nScore, val.m_steamIDUser == SteamUser.GetSteamID (), false));
 						}
 						list = (from pm1672868741 in list.OrderBy (class_495.field_2293.method_1374)
@@ -38516,7 +38538,7 @@ public sealed class ScoreManager
 					}
 				});
 			}
-		});
+		});*/
 	}
 
 	private void method_1352 (LeaderboardFindResult_t parameter_3586, bool parameter_3587)
@@ -38551,7 +38573,7 @@ public sealed class ScoreManager
 			//IL_0030: Unknown result type (might be due to invalid IL or missing references)
 			if (!parameter_3583 && parameter_3582.m_cEntryCount == 1) {
 				LeaderboardEntry_t val2 = default(LeaderboardEntry_t);
-				SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3582.m_hSteamLeaderboardEntries, 0, ref val2, (int[])null, 0);
+				SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3582.m_hSteamLeaderboardEntries, 0, out val2, (int[])null, 0);
 				string leaderboardName3 = SteamUserStats.GetLeaderboardName (parameter_3582.m_hSteamLeaderboard);
 				field_2937 [leaderboardName3] = val2.m_nScore;
 			}
@@ -38572,7 +38594,7 @@ public sealed class ScoreManager
 				List<LeaderboardEntry> list = new List<LeaderboardEntry> ();
 				LeaderboardEntry_t val = default(LeaderboardEntry_t);
 				for (int i = 0; i < parameter_3584.m_cEntryCount; i++) {
-					SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3584.m_hSteamLeaderboardEntries, i, ref val, (int[])null, 0);
+					SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3584.m_hSteamLeaderboardEntries, i, out val, (int[])null, 0);
 					list.Add (new LeaderboardEntry (SteamFriends.GetFriendPersonaName (val.m_steamIDUser), val.m_nScore, val.m_steamIDUser == SteamUser.GetSteamID (), false));
 				}
 				list = (from pm1672868741 in list.OrderBy (class_495.field_2293.method_1374)
@@ -38600,7 +38622,7 @@ public sealed class ScoreManager
 		//IL_0030: Unknown result type (might be due to invalid IL or missing references)
 		if (!parameter_3589 && parameter_3588.m_cEntryCount == 1) {
 			LeaderboardEntry_t val = default(LeaderboardEntry_t);
-			SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3588.m_hSteamLeaderboardEntries, 0, ref val, (int[])null, 0);
+			SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3588.m_hSteamLeaderboardEntries, 0, out val, (int[])null, 0);
 			string leaderboardName = SteamUserStats.GetLeaderboardName (parameter_3588.m_hSteamLeaderboard);
 			field_2937 [leaderboardName] = val.m_nScore;
 		}
@@ -38623,7 +38645,7 @@ public sealed class ScoreManager
 			List<LeaderboardEntry> list = new List<LeaderboardEntry> ();
 			LeaderboardEntry_t val = default(LeaderboardEntry_t);
 			for (int i = 0; i < parameter_3590.m_cEntryCount; i++) {
-				SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3590.m_hSteamLeaderboardEntries, i, ref val, (int[])null, 0);
+				SteamUserStats.GetDownloadedLeaderboardEntry (parameter_3590.m_hSteamLeaderboardEntries, i, out val, (int[])null, 0);
 				list.Add (new LeaderboardEntry (SteamFriends.GetFriendPersonaName (val.m_steamIDUser), val.m_nScore, val.m_steamIDUser == SteamUser.GetSteamID (), false));
 			}
 			list = (from pm1672868741 in list.OrderBy (class_495.field_2293.method_1374)
@@ -43105,14 +43127,14 @@ public sealed class Sim : class_186
 
 	private bool method_1814 (Molecule parameter_4392, List<Part> parameter_4393)
 	{
-		class_718 p788092568 = new class_724 ();
+		class_724 p788092568 = new class_724 ();
 		p788092568.field_3565 = this;
 		p788092568.field_3564 = parameter_4393;
 		return parameter_4392.GetAtoms ().Keys.Any (delegate(HexIndex parameter_4394) {
-			p788092568 = new class_718 ();
-			p788092568.field_3553 = p788092568;
-			p788092568.field_3552 = parameter_4394;
-			return p788092568.field_3564.Any ((Part parameter_4361) => p788092568.field_3553.field_3565.PartStates [parameter_4361].field_2655 == p788092568.field_3552);
+			var h = new class_718 ();
+			h.field_3553 = p788092568;
+			h.field_3552 = parameter_4394;
+			return p788092568.field_3564.Any ((Part parameter_4361) => h.field_3553.field_3565.PartStates [parameter_4361].field_2655 == h.field_3552);
 		});
 	}
 
@@ -43876,7 +43898,7 @@ public sealed class SolitaireScreen : IScreen
 			}
 			field_3598.method_1871 (SolitareState.method_1901 (maybe.Get (), new global::class_150<float> (0f)));
 			class_9.field_46.field_2007.method_395 (1f);
-			if (class_448.field_2042 && SteamUserStats.GetStat ("SOLITAIRE", ref field_3598.field_3585)) {
+			if (class_448.field_2042 && SteamUserStats.GetStat ("SOLITAIRE", out field_3598.field_3585)) {
 				field_3598.field_3585++;
 				SteamUserStats.SetStat ("SOLITAIRE", field_3598.field_3585);
 				SteamUserStats.StoreStats ();
@@ -44161,7 +44183,7 @@ public sealed class SolitaireScreen : IScreen
 		field_3588 = parameter_4473;
 		field_3586 = new StoryPanel (new class_168 ("solitaire"), true);
 		if (class_448.field_2042) {
-			SteamUserStats.GetStat ("SOLITAIRE", ref field_3585);
+			SteamUserStats.GetStat ("SOLITAIRE", out field_3585);
 		}
 	}
 
@@ -46461,7 +46483,7 @@ public abstract class SolutionEditorBase
 					}
 				}
 			}
-		} else if (parameter_4615.method_1141 () == PartTypes.VanBerloWheel) {
+		} else if (parameter_4615.method_1141 () == PartTypes.VanBerloWheel || parameter_4615.method_1141() == PartTypes.RavariWheel) {
 			method_1990 (parameter_4615.method_1147 (), PartTypes.HexArm.Arms, class_161);
 			foreach (KeyValuePair<HexIndex, AtomType> item4 in parameter_4615.method_1141 ().FixedAtoms) {
 				Vector2 vector3 = class_161.field_1167 + class_174.field_1182.method_336 (item4.Key).Rotated (class_161.field_1168);
@@ -46906,7 +46928,7 @@ public abstract class SolutionEditorBase
 			method_2002 (class_161, parameter_4618.method_1171 (), color);
 		} else if (parameter_4618.method_1141 ().field_1063) {
 			method_2002 (class_161, parameter_4618.method_1155 (), color);
-		} else if (parameter_4618.method_1141 () == PartTypes.VanBerloWheel) {
+		} else if (parameter_4618.method_1141 () == PartTypes.VanBerloWheel || parameter_4618.method_1141() == PartTypes.RavariWheel) {
 			method_1991 (parameter_4618.method_1147 (), PartTypes.HexArm.Arms, class_161, color);
 			for (int i = 0; i < 6; i++) {
 				float num = (float)(i * 60) * ((float)Math.PI / 180f);
@@ -47620,7 +47642,7 @@ public sealed class SolutionEditorPartsPanel : class_388
 
 	public override void method_324 (float parameter_4710)
 	{
-		class_754 p788092568 = new class_755 ();
+		class_755 p788092568 = new class_755 ();
 		p788092568.field_3689 = this;
 		if (class_418.method_616 (SDL.SdlKey.SDLK_4) && !field_1806.CurrentSolution ().GetPuzzle ().field_2703) {
 			field_3681 = !field_3681;
@@ -47655,22 +47677,22 @@ public sealed class SolutionEditorPartsPanel : class_388
 			list2.Reverse ();
 		}
 		Action<List<PartTypeForToolbar>, PartType> obj = delegate(List<PartTypeForToolbar> parameter_4712, PartType parameter_4713) {
-			p788092568 = new class_754 ();
-			p788092568.field_3686 = parameter_4713;
+			var h = new class_754 ();
+			h.field_3686 = parameter_4713;
 			bool p35595137 = true;
-			bool pm2060034124 = field_1806.CurrentSolution ().GetPuzzle ().method_1236 (p788092568.field_3686);
-			Maybe<int> maybe = field_1806.CurrentSolution ().GetPuzzle ().field_2706.method_68 (p788092568.field_3686);
-			if (p788092568.field_3686.Unique) {
+			bool pm2060034124 = field_1806.CurrentSolution ().GetPuzzle ().method_1236 (h.field_3686);
+			Maybe<int> maybe = field_1806.CurrentSolution ().GetPuzzle ().field_2706.method_68 (h.field_3686);
+			if (h.field_3686.Unique) {
 				maybe = 1;
 			}
 			if (maybe.IsPresent ()) {
-				int num4 = field_1806.CurrentSolution ().method_1918 ().Count ((Part parameter_4714) => parameter_4714.method_1141 () == p788092568.field_3686);
-				if (field_1806.method_2097 (p788092568.method_2030)) {
+				int num4 = field_1806.CurrentSolution ().method_1918 ().Count ((Part parameter_4714) => parameter_4714.method_1141 () == h.field_3686);
+				if (field_1806.method_2097 (h.method_2030)) {
 					num4++;
 				}
 				p35595137 = num4 < maybe.Get ();
 			}
-			parameter_4712.Add (PartTypeForToolbar.Of (p788092568.field_3686, p35595137, pm2060034124));
+			parameter_4712.Add (PartTypeForToolbar.Of (h.field_3686, p35595137, pm2060034124));
 		};
 		List<PartTypeForToolbar> list3 = new List<PartTypeForToolbar> ();
 		obj (list3, PartTypes.SingleArm);
@@ -47680,6 +47702,7 @@ public sealed class SolutionEditorPartsPanel : class_388
 		obj (list3, PartTypes.PistonArm);
 		obj (list3, PartTypes.Track);
 		obj (list3, PartTypes.VanBerloWheel);
+		obj(list3, PartTypes.RavariWheel);
 		list3.RemoveAll ((PartTypeForToolbar parameter_3343) => !parameter_3343.field_2679);
 		List<PartTypeForToolbar> list4 = new List<PartTypeForToolbar> ();
 		obj (list4, PartTypes.Bonding);
@@ -50124,7 +50147,6 @@ public static class Steam
 		SteamAPI.RunCallbacks ();
 	}
 
-	[IteratorStateMachine (typeof(class_769))]
 	public static IEnumerable<T> method_2136<T> () where T : struct
 	{
 		return new class_769<T> (-2);
@@ -51039,7 +51061,6 @@ public sealed class Vignette
 		class_780 field_3849 = new class_780 {
 			field_3847 = parameter_4914
 		};
-		base..ctor ();
 		field_3844 = parameter_4913;
 		field_3845 = new List<List<VignetteEvent>> ();
 		field_3846 = new List<class_182> ();
@@ -51606,7 +51627,7 @@ public sealed class WorkshopManager
 		uint num2 = default(uint);
 		foreach (PublishedFileId_t val in array3) {
 			EItemState val2 = (EItemState)SteamUGC.GetItemState (val);
-			if ((val2 & 4) != 4 || !SteamUGC.GetItemInstallInfo (val, ref num, ref path, 4096u, ref num2)) {
+			if (!(val2.HasFlag(EItemState.k_EItemStateInstalled)) || !SteamUGC.GetItemInstallInfo (val, out num, out path, 4096u, out num2)) {
 				continue;
 			}
 			foreach (string item in Directory.EnumerateFiles (path)) {
